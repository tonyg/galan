dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/main.c)
AM_INIT_AUTOMAKE(galan, 0.2.8)
AM_CONFIG_HEADER(config.h)

dnl Program checks
AC_PROG_CC
AM_PROG_CC_STDC

dnl Library checks
dnl dnl Libtool for the plugins
dnl AC_LIBTOOL_DLOPEN
dnl AM_PROG_LIBTOOL
dnl AM_DISABLE_STATIC
dnl AC_SUBST(LIBTOOL_DEPS)


dnl Header-file checks
AC_HEADER_STDC

dnl Checks for the optional plugins
dnl ===========================================================================

AC_SUBST(OPTIONAL_PLUGINS)
OPTIONAL_PLUGINS=

AC_CHECK_HEADER(esd.h, OPTIONAL_PLUGINS="${OPTIONAL_PLUGINS} esd_output.so")
AC_CHECK_HEADER(vorbis/vorbisfile.h, OPTIONAL_PLUGINS="${OPTIONAL_PLUGINS} ogg_ra.so")
AC_CHECK_HEADERS(audiofile.h, OPTIONAL_PLUGINS="${OPTIONAL_PLUGINS} pcm_out.so")

dnl Feature tests
dnl ===========================================================================

AC_ARG_ENABLE(fixed-point,
[  --enable-fixed-point    Use fixed-point for sample representation],
	if test "x$enableval" = "xyes"; then
		AC_DEFINE(WANT_FLOATING_POINT_SAMPLES, 0)
	fi,
	AC_DEFINE(WANT_FLOATING_POINT_SAMPLES, 1))
AC_ARG_ENABLE(emu10k1,
[  --enable-emu10k1        Compile emu10k1 support],
	OPTIONAL_PLUGINS="${OPTIONAL_PLUGINS} emu10k1.so" )

AM_PATH_GTK(1.2.0, ,
	    AC_MSG_ERROR(Cannot find GTK: is gtk-config in path?))

AM_PATH_GDK_PIXBUF()

AM_PATH_ALSA(0.9.0, OPTIONAL_PLUGINS="${OPTIONAL_PLUGINS} alsa_out.so")

CFLAGS="$alsa_save_CFLAGS"
LDFLAGS="$alsa_save_LDFLAGS"
LIBS="$alsa_save_LIBS"

dnl Only use -Wall if we have gcc
if test "x$GCC" = "xyes"; then
  if test -z "`echo "$CFLAGS" | grep "\-Wall" 2> /dev/null`" ; then
    CFLAGS="$CFLAGS -Wall"
  fi
fi


AC_OUTPUT(Makefile src/Makefile plugins/Makefile pixmaps/Makefile)
